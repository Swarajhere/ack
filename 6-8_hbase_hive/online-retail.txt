i. Create and Load Table with Online Retail Data in Hive

online_retail.csv - InvoiceNo, StockCode, Description, Quantity, InvoiceDate, UnitPrice, CustomerID, Country

CREATE TABLE online_retail (
    invoice_no STRING,
    stock_code STRING,
    description STRING,
    quantity INT,
    invoice_date STRING,
    unit_price DOUBLE,
    customer_id STRING,
    country STRING
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE;

-- load data 
LOAD DATA LOCAL INPATH '/home/cloudera/data/online_retail.csv' INTO TABLE online_retail;
 
-------------------------------------

j. Create Index on Online Retail Table in Hive

CREATE INDEX idx_invoice_no
ON TABLE online_retail (invoice_no)
AS 'COMPACT'
WITH DEFERRED REBUILD;

-- (Optional)
ALTER INDEX idx_invoice_no ON online_retail REBUILD;

----------------------------------

k. Find Total and Average Sales in Hive
Sales = Quantity * UnitPrice

SELECT 
    SUM(quantity * unit_price) AS total_sales,
    AVG(quantity * unit_price) AS average_sales
FROM online_retail;

------------------------------
l. Find Order Details with Maximum Cost

SELECT 
    invoice_no,
    SUM(quantity * unit_price) AS total_price
FROM online_retail
GROUP BY invoice_no
ORDER BY total_price DESC
LIMIT 1;

--------------------------
m. Find Customer Details with Maximum Order Total

SELECT 
    customer_id,
    SUM(quantity * unit_price) AS total_spent
FROM online_retail
GROUP BY customer_id
ORDER BY total_spent DESC
LIMIT 1;

--------------------------
n. Find the Country with Maximum and Minimum Sale
-- Country with maximum sale
SELECT 
    country,
    SUM(quantity * unit_price) AS total_sales
FROM online_retail
GROUP BY country
ORDER BY total_sales DESC
LIMIT 1;

-- Country with minimum sale
SELECT 
    country,
    SUM(quantity * unit_price) AS total_sales
FROM online_retail
GROUP BY country
HAVING total_sales > 0
ORDER BY total_sales ASC
LIMIT 1;

-----------------------------
o. Create External Hive Table Connected to HBase
step 1 - 
hbase shell

create 'hbase_online_retail', 'cf'

# Example Inserts (insert only small sample or representative data due to scale)
put 'hbase_online_retail', 'INV001', 'cf:stock_code', 'S123'
put 'hbase_online_retail', 'INV001', 'cf:description', 'Book'
put 'hbase_online_retail', 'INV001', 'cf:quantity', '2'
put 'hbase_online_retail', 'INV001', 'cf:unit_price', '10.0'
put 'hbase_online_retail', 'INV001', 'cf:customer_id', 'C001'
put 'hbase_online_retail', 'INV001', 'cf:country', 'UK'
exit

step 2 - 
CREATE EXTERNAL TABLE hbase_online_retail (
    invoice_no STRING,
    stock_code STRING,
    description STRING,
    quantity INT,
    unit_price DOUBLE,
    customer_id STRING,
    country STRING
)
STORED BY 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES (
    "hbase.columns.mapping" = ":key,cf:stock_code,cf:description,cf:quantity,cf:unit_price,cf:customer_id,cf:country"
)
TBLPROPERTIES ("hbase.table.name" = "hbase_online_retail");

--------------------------
p. Display Records from HBase Table

SELECT * FROM hbase_online_retail;
--------------------------------
